{"ast":null,"code":"import _objectSpread from \"/Users/aleca/Documents/REACT/web/Ideal/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/aleca/Documents/REACT/web/Ideal/src/Components/scrollAct.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport raf from 'raf';\nexport default class ScrollInNav extends Component {\n  constructor(props) {\n    super(props);\n    this.fixedStyle = {\n      WebkitTransition: 'all .2s ease-in-out',\n      MozTransition: 'all .2s ease-in-out',\n      OTransition: 'all .2s ease-in-out',\n      transition: 'all .2s ease-in-out',\n      top: 0,\n      left: 0,\n      right: 0,\n      zIndex: 1\n    };\n    this.hiddenStyle = {\n      WebkitTransform: 'translateY(-100%)',\n      MsTransform: 'translateY(-100%)',\n      transform: 'translateY(-50%)',\n      opacity: 0\n    };\n    this.scrolledInStyle = {\n      WebkitTransform: 'translateY(0)',\n      MsTransform: 'translateY(0)',\n      transform: 'translateY(0)'\n    };\n\n    this.getScrollY = () => {\n      if (window.pageYOffset !== undefined) {\n        return window.pageYOffset;\n      } else if (window.scrollTop !== undefined) {\n        return window.scrollTop;\n      } else {\n        return (document.documentElement || document.body.parentNode || document.body).scrollTop;\n      }\n    };\n\n    this.handleScroll = () => {\n      if (!this.handlingScrollUpdate) {\n        this.handlingScrollUpdate = true;\n        raf(this.update);\n      }\n    };\n\n    this.update = () => {\n      let currentScrollY = this.getScrollY();\n      console.log(currentScrollY);\n      console.log(this.props.scrollInHeight);\n      this.setState({\n        hidden: currentScrollY < this.props.scrollInHeight\n      });\n      this.handlingScrollUpdate = false;\n    };\n\n    this.state = {\n      hidden: true\n    };\n    this.handlingScrollUpdate = false;\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  render() {\n    let renderStyle = this.fixedStyle;\n    renderStyle = this.state.hidden ? _objectSpread({}, renderStyle, {}, this.hiddenStyle) : _objectSpread({}, renderStyle, {}, this.scrolledInStyle);\n    return React.createElement(\"div\", {\n      className: \"scroll-in-nav\",\n      ref: \"scrollnav\",\n      style: renderStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\nScrollInNav.propTypes = {\n  scrollInHeight: PropTypes.number\n};\nScrollInNav.defaultProps = {\n  scrollInHeight: 50\n};","map":{"version":3,"sources":["/Users/aleca/Documents/REACT/web/Ideal/src/Components/scrollAct.js"],"names":["React","Component","PropTypes","raf","ScrollInNav","constructor","props","fixedStyle","WebkitTransition","MozTransition","OTransition","transition","top","left","right","zIndex","hiddenStyle","WebkitTransform","MsTransform","transform","opacity","scrolledInStyle","getScrollY","window","pageYOffset","undefined","scrollTop","document","documentElement","body","parentNode","handleScroll","handlingScrollUpdate","update","currentScrollY","console","log","scrollInHeight","setState","hidden","state","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","renderStyle","children","propTypes","number","defaultProps"],"mappings":"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","sourcesContent":["import React , { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport raf from 'raf';\n\nexport default class ScrollInNav extends Component {\n  static propTypes = {\n    scrollInHeight: PropTypes.number\n  };\n\n  static defaultProps = {\n    scrollInHeight: 50\n  };\n\n  fixedStyle = {\n\n      WebkitTransition: 'all .2s ease-in-out',\n      MozTransition: 'all .2s ease-in-out',\n      OTransition: 'all .2s ease-in-out',\n      transition: 'all .2s ease-in-out',\n      top: 0,\n      left: 0,\n      right: 0,\n      zIndex: 1\n  };\n\n  hiddenStyle = {\n      WebkitTransform: 'translateY(-100%)',\n      MsTransform: 'translateY(-100%)',\n      transform: 'translateY(-50%)',\n      opacity: 0\n  };\n\n  scrolledInStyle = {\n      WebkitTransform: 'translateY(0)',\n      MsTransform: 'translateY(0)',\n      transform: 'translateY(0)'\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hidden: true\n    };\n\n    this.handlingScrollUpdate = false;\n  }\n\n  getScrollY = () => {\n    if (window.pageYOffset !== undefined) {\n      return window.pageYOffset\n    } else if (window.scrollTop !== undefined) {\n      return window.scrollTop\n    } else {\n      return (document.documentElement || document.body.parentNode || document.body).scrollTop\n    }\n  }\n\n  handleScroll = () => {\n     if (!this.handlingScrollUpdate) {\n      this.handlingScrollUpdate = true;\n      raf(this.update);\n    }\n  }\n\n  update = () => {\n    let currentScrollY = this.getScrollY();\n    console.log(currentScrollY);\n    console.log(this.props.scrollInHeight);\n\n    this.setState({\n      hidden: currentScrollY < this.props.scrollInHeight\n    });\n\n    this.handlingScrollUpdate = false;\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  render() {\n    let renderStyle = this.fixedStyle;\n    renderStyle = this.state.hidden ?\n        {...renderStyle, ...this.hiddenStyle} :\n        {...renderStyle, ...this.scrolledInStyle};\n\n    return (\n        <div className=\"scroll-in-nav\" ref=\"scrollnav\" style={renderStyle}>\n          {this.props.children}\n        </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}